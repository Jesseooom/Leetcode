//Java	 利用2sum解3sum
class Solution {
    public static List<List<Integer>> threeSum(int[] nums) {
    	Arrays.sort(nums);												//理解排序的必要性
    	List<List<Integer>> res = new ArrayList<List<Integer>>();
    	for(int i = 0;i < nums.length - 2;i++) {                          //注意这里是-2
    		if(i !=0 && nums[i] == nums[i - 1]) continue;
    		int target = 0 - nums[i];
    		int left = i + 1;
    		int right = nums.length - 1;
    		List<Integer> temp = new ArrayList<Integer>();
    		while(left < right) {
    			if(nums[left] + nums[right] == target) {
//    				temp.add(nums[i]);
//    				temp.add(nums[left]);
//    				temp.add(nums[right]);
//    				res.add(temp);
    				res.add(Arrays.asList(nums[i],nums[left],nums[right]));    //一句顶三句
    				while(left < right && nums[left] == nums[left + 1]) left++;  //去掉重复元素 不然[-2,0,0,2,2]无法通过
    				while(left < right && nums[right] == nums[right - 1]) right--;
    				left++;
    				right--;
    			}else if(nums[left] + nums[right] > target) {
    				right --;
    			}else {
    				left ++;
    			}
    		}
    	}
        return res;
    }
}