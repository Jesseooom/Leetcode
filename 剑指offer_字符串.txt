// 翻转单词顺序列
// 这是一种较为通用的解法，其中，sb.insert(pos, c)表示在pos位置插入字符
public class Solution {
    public String ReverseSentence(String str) {
        int pos=0;
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<str.length();i++){
            char c=str.charAt(i);
            if(c==' '){
             pos=0;
            }
            sb.insert(pos, c);
            if(c!=' '){
             pos++;
            }
        }
        return sb.toString();
    }
}

// 第二张解法利用java自带的String.split()函数，该函数将指定的分隔符作为分割点
// 但是当n个分隔符连一起时会返回n个空格，而且若第一个为空格，则会返回空格。

    public static String ReverseSentence(String str) {
        //一定要先把头和尾的空格去掉
		if(str.trim().length() == 0)
            return str;
        String [] temp = str.split(" ");
        String res = "";
        for(int i = temp.length - 1; i >= 0; i--){
            res += temp[i];
            if(i != 0)
                res += " ";
        }
        return res;
    }